//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Klijent.LotoServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LotoServiceReference.ILoto", CallbackContract=typeof(Klijent.LotoServiceReference.ILotoCallback))]
    public interface ILoto {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoto/DodajKombinaciju", ReplyAction="http://tempuri.org/ILoto/DodajKombinacijuResponse")]
        bool DodajKombinaciju(string nadimak, WCF_LotoCB.Kombinacija kombinacija);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoto/DodajKombinaciju", ReplyAction="http://tempuri.org/ILoto/DodajKombinacijuResponse")]
        System.Threading.Tasks.Task<bool> DodajKombinacijuAsync(string nadimak, WCF_LotoCB.Kombinacija kombinacija);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoto/ObrisiKombinaciju", ReplyAction="http://tempuri.org/ILoto/ObrisiKombinacijuResponse")]
        void ObrisiKombinaciju(string nadimak);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoto/ObrisiKombinaciju", ReplyAction="http://tempuri.org/ILoto/ObrisiKombinacijuResponse")]
        System.Threading.Tasks.Task ObrisiKombinacijuAsync(string nadimak);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILoto/ZapocniIzvlacenje")]
        void ZapocniIzvlacenje();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILoto/ZapocniIzvlacenje")]
        System.Threading.Tasks.Task ZapocniIzvlacenjeAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILotoCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILoto/NoviBroj")]
        void NoviBroj(int broj);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILoto/ObavestiPobednika")]
        void ObavestiPobednika(string nadminak, int brojIzvucenihBrojeva);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILotoChannel : Klijent.LotoServiceReference.ILoto, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LotoClient : System.ServiceModel.DuplexClientBase<Klijent.LotoServiceReference.ILoto>, Klijent.LotoServiceReference.ILoto {
        
        public LotoClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public LotoClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public LotoClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LotoClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LotoClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool DodajKombinaciju(string nadimak, WCF_LotoCB.Kombinacija kombinacija) {
            return base.Channel.DodajKombinaciju(nadimak, kombinacija);
        }
        
        public System.Threading.Tasks.Task<bool> DodajKombinacijuAsync(string nadimak, WCF_LotoCB.Kombinacija kombinacija) {
            return base.Channel.DodajKombinacijuAsync(nadimak, kombinacija);
        }
        
        public void ObrisiKombinaciju(string nadimak) {
            base.Channel.ObrisiKombinaciju(nadimak);
        }
        
        public System.Threading.Tasks.Task ObrisiKombinacijuAsync(string nadimak) {
            return base.Channel.ObrisiKombinacijuAsync(nadimak);
        }
        
        public void ZapocniIzvlacenje() {
            base.Channel.ZapocniIzvlacenje();
        }
        
        public System.Threading.Tasks.Task ZapocniIzvlacenjeAsync() {
            return base.Channel.ZapocniIzvlacenjeAsync();
        }
    }
}
